import{_ as a,c as s,b as e,o as t}from"./app-CiqgFORo.js";const i={};function o(l,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h1><h2 id="pass-custom-java-opts" tabindex="-1"><a class="header-anchor" href="#pass-custom-java-opts"><span>Pass custom Java opts</span></a></h2><p>By default, the docker container will allow a custom JVM options setting the environments vars <code>JAVA_OPTS</code>. For example, if you want to change the default timezone, just add <code>-e &quot;JAVA_OPTS=-Duser.timezone=Europe/Paris&quot;</code></p><h2 id="run-with-another-jvm-options-file" tabindex="-1"><a class="header-anchor" href="#run-with-another-jvm-options-file"><span>Run with another jvm.options file</span></a></h2><p>By default, the docker container will run with a <a href="https://github.com/tchiotludo/akhq/blob/dev/docker/app/jvm.options" target="_blank" rel="noopener noreferrer">jvm.options</a> file, you can override it with your own with an Environment Variable. With the <code>JVM_OPTS_FILE</code> environment variable, you can override the jvm.options file by passing the path of your file instead.</p><p>Override the <code>JVM_OPTS_FILE</code> with docker run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--env</span> <span class="token assign-left variable">JVM_OPTS_FILE</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>path-of-your-jvm.options-file<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-v</span> /tmp/application.yml:/app/application.yml <span class="token punctuation">\\</span></span>
<span class="line">    tchiotludo/akhq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Override the <code>JVM_OPTS_FILE</code> with docker-compose:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">akhq</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> tchiotludo/akhq<span class="token punctuation">-</span>jvm<span class="token punctuation">:</span>dev</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">JVM_OPTS_FILE</span><span class="token punctuation">:</span> /app/jvm.options</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;8080:8080&quot;</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /tmp/application.yml<span class="token punctuation">:</span>/app/application.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you do not override the <code>JVM_OPTS_FILE</code>, the docker container will take the defaults one instead.</p><p>The AKHQ docker image supports 4 environment variables to handle configuration :</p><ul><li><code>AKHQ_CONFIGURATION</code>: a string that contains the full configuration in yml that will be written on /app/configuration.yml on the container.</li><li><code>MICRONAUT_APPLICATION_JSON</code>: a string that contains the full configuration in JSON format</li><li><code>MICRONAUT_CONFIG_FILES</code>: a path to a configuration file in the container. Default path is <code>/app/application.yml</code></li><li><code>CLASSPATH</code>: additional Java classpath entries. Must be used to specify the location of the TIBCO Avro client library jar if a &#39;tibco&#39; schema registry type is used</li></ul><h2 id="how-to-mount-configuration-file" tabindex="-1"><a class="header-anchor" href="#how-to-mount-configuration-file"><span>How to mount configuration file</span></a></h2><p>Take care when you mount configuration files to not remove akhq files located on /app. You need to explicitly mount the <code>/app/application.yml</code> and not mount the <code>/app</code> directory. This will remove the AKHQ binaries and give you this error: <code> /usr/local/bin/docker-entrypoint.sh: 9: exec: ./akhq: not found</code></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /app/application.yml</span>
<span class="line">  <span class="token key atrule">subPath</span><span class="token punctuation">:</span> application.yml</span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> config</span>
<span class="line">  <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15)]))}const c=a(i,[["render",o],["__file","docker.html.vue"]]),r=JSON.parse('{"path":"/docs/configuration/docker.html","title":"Docker","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Pass custom Java opts","slug":"pass-custom-java-opts","link":"#pass-custom-java-opts","children":[]},{"level":2,"title":"Run with another jvm.options file","slug":"run-with-another-jvm-options-file","link":"#run-with-another-jvm-options-file","children":[]},{"level":2,"title":"How to mount configuration file","slug":"how-to-mount-configuration-file","link":"#how-to-mount-configuration-file","children":[]}],"git":{"updatedTime":1738672977000,"contributors":[{"name":"Mikael Olausson","username":"Mikael Olausson","email":"104485047+mikaelol@users.noreply.github.com","commits":1,"url":"https://github.com/Mikael Olausson"}]},"filePathRelative":"docs/configuration/docker.md"}');export{c as comp,r as data};

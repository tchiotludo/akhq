import{_ as r,r as i,o as c,c as d,b as e,d as a,a as n,w as o,e as l}from"./app-oQ66xM6I.js";const h={},u=e("h1",{id:"installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),a(" Installation")],-1),p=l(`<p>Configuration file default path is <code>/app/application.yml</code> (for YML file), so expected to be at the same folder as AKHQ application files. Configuration file path can target any path through <code>MICRONAUT_CONFIG_FILES</code> environment variable, for example: <code>MICRONAUT_CONFIG_FILES=/somepath/application.yml</code>.</p><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> /tmp/application.yml:/app/application.yml <span class="token punctuation">\\</span>
    tchiotludo/akhq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),m=e("li",null,[a("With "),e("code",null,"-v /tmp/application.yml"),a(" must be an absolute path to configuration file")],-1),b={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},v=e("h3",{id:"stand-alone",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#stand-alone","aria-hidden":"true"},"#"),a(" Stand Alone")],-1),g=e("li",null,"Install Java 17",-1),_={href:"https://github.com/tchiotludo/akhq/releases",target:"_blank",rel:"noopener noreferrer"},f=e("li",null,[a("Launch the application with "),e("code",null,"java -Dmicronaut.config.files=/path/to/application.yml -jar akhq.jar")],-1),k={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},x=l(`<h3 id="running-in-kubernetes-using-a-helm-chart" tabindex="-1"><a class="header-anchor" href="#running-in-kubernetes-using-a-helm-chart" aria-hidden="true">#</a> Running in Kubernetes (using a Helm Chart)</h3><h3 id="using-helm-repository" tabindex="-1"><a class="header-anchor" href="#using-helm-repository" aria-hidden="true">#</a> Using Helm repository</h3><ul><li>Add the AKHQ helm charts repository:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo <span class="token function">add</span> akhq https://akhq.io/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Install or upgrade</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm upgrade <span class="token parameter variable">--install</span> akhq akhq/akhq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h4><ul><li>Chart version &gt;=0.1.1 requires Kubernetes version &gt;=1.14</li><li>Chart version 0.1.0 works on previous Kubernetes versions</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> akhq akhq/akhq <span class="token parameter variable">--version</span> <span class="token number">0.1</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="using-git" tabindex="-1"><a class="header-anchor" href="#using-git" aria-hidden="true">#</a> Using git</h3><ul><li>Clone the repository:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/tchiotludo/akhq <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> akhq/helm/akhq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),q={href:"https://github.com/tchiotludo/akhq/blob/dev/helm/akhq/values.yaml",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"configuration",-1),C={href:"https://github.com/tchiotludo/akhq/blob/dev/application.example.yml",target:"_blank",rel:"noopener noreferrer"},w=e("code",null,"ConfigMap",-1),I=e("code",null,"secrets",-1),A={href:"https://github.com/tchiotludo/akhq/blob/dev/application.example.yml",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"Secret",-1),N=e("li",null,"Both values will be merged at startup",-1),K=e("li",null,"Apply the chart:",-1),R=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>akhq-release-name  <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function B(E,F){const t=i("RouterLink"),s=i("ExternalLinkIcon");return c(),d("div",null,[u,e("p",null,[a("First you need a "),n(t,{to:"/docs/configuration/"},{default:o(()=>[a("configuration files")]),_:1}),a(" in order to configure AKHQ connections to Kafka Brokers.")]),p,e("ul",null,[m,e("li",null,[a("Go to "),e("a",b,[a("http://localhost:8080"),n(s)])])]),v,e("ul",null,[g,e("li",null,[a("Download the latest jar on "),e("a",_,[a("release page"),n(s)])]),e("li",null,[a("Create a "),n(t,{to:"/docs/configuration/"},{default:o(()=>[a("configuration file")]),_:1})]),f,e("li",null,[a("Go to "),e("a",k,[a("http://localhost:8080"),n(s)])])]),x,e("ul",null,[e("li",null,[a("Update helm values located in "),e("a",q,[a("values.yaml"),n(s)]),e("ul",null,[e("li",null,[y,a(" values will contains all related configuration that you can find in "),e("a",C,[a("application.example.yml"),n(s)]),a(" and will be store in a "),w]),e("li",null,[I,a(" values will contains all sensitive configurations (with credentials) that you can find in "),e("a",A,[a("application.example.yml"),n(s)]),a(" and will be store in "),L]),N])]),K]),R])}const S=r(h,[["render",B],["__file","installation.html.vue"]]);export{S as default};

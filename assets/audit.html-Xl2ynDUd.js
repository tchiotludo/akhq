import{_ as n,o as e,c as a,e as s}from"./app-STOpbFJX.js";const t={},i=s(`<h1 id="audit-configuration" tabindex="-1"><a class="header-anchor" href="#audit-configuration" aria-hidden="true">#</a> Audit configuration</h1><p>akhq can be configured to emit audit event to a kafka cluster for the following user actions:</p><ul><li>Topic level <ul><li>Topic creation</li><li>Topic configuration change</li><li>Topic partition increase</li><li>Topic deletion</li></ul></li><li>Consumer group level <ul><li>Update offsets</li><li>Delete offsets</li><li>Delete consumer group</li></ul></li><li>Schema registry <ul><li>Create new schema for a subject</li><li>Update existing schema for a subject</li><li>Change compatibility level of a subject</li><li>Delete a subject</li></ul></li><li>Kafka connect <ul><li>Create new connector</li><li>Update existing connector</li><li>Pause and resume connector</li><li>Restart connector or task</li><li>Delete connector</li></ul></li></ul><p>The following configuration is an example of akhq with audit turned ON. All events mentioned above will be sent to the <code>my-audit-cluster-plain-text</code> cluster in the topic <code>audit</code>.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">akhq</span><span class="token punctuation">:</span>

  <span class="token key atrule">connections</span><span class="token punctuation">:</span>
    <span class="token key atrule">my-cluster-plain-text</span><span class="token punctuation">:</span>
      <span class="token key atrule">properties</span><span class="token punctuation">:</span>
        <span class="token key atrule">bootstrap.servers</span><span class="token punctuation">:</span> <span class="token string">&quot;kafka:9092&quot;</span>
    <span class="token key atrule">my-audit-cluster-plain-text</span><span class="token punctuation">:</span>
      <span class="token key atrule">properties</span><span class="token punctuation">:</span>
        <span class="token key atrule">bootstrap.servers</span><span class="token punctuation">:</span> <span class="token string">&quot;audit:9092&quot;</span>

  <span class="token key atrule">audit</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">cluster-id</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>audit<span class="token punctuation">-</span>cluster<span class="token punctuation">-</span>plain<span class="token punctuation">-</span>text
    <span class="token key atrule">topic-name</span><span class="token punctuation">:</span> audit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To be able to identify the user who performed these actions, security must be turned ON (otherwise the userName field is left empty).</p>`,6),l=[i];function o(c,u){return e(),a("div",null,l)}const r=n(t,[["render",o],["__file","audit.html.vue"]]);export{r as default};

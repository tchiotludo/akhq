import{_ as a,c as n,b as e,o as t}from"./app-Bj9Eb5tA.js";const o={};function p(i,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="protobuf-deserialization" tabindex="-1"><a class="header-anchor" href="#protobuf-deserialization"><span>Protobuf deserialization</span></a></h1><p>To deserialize topics containing data in Protobuf format, you can set topics mapping: for each <code>topic-regex</code> you can specify <code>descriptor-file-base64</code> (descriptor file encoded to Base64 format), or you can put descriptor files in <code>descriptors-folder</code> and specify <code>descriptor-file</code> name, also specify corresponding message types for keys and values. If, for example, keys are not in Protobuf format, <code>key-message-type</code> can be omitted, the same for <code>value-message-type</code>. . It&#39;s important to keep in mind that both <code>key-message-type</code> and <code>value-message-type</code> require a fully-qualified name. This configuration can be specified for each Kafka cluster.</p><p>Example configuration can look like as follows:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">akhq</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">connections</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">kafka</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">properties</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># standard kafka properties</span></span>
<span class="line">      <span class="token key atrule">deserialization</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">protobuf</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">descriptors-folder</span><span class="token punctuation">:</span> <span class="token string">&quot;/app/protobuf_desc&quot;</span></span>
<span class="line">          <span class="token key atrule">topics-mapping</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">topic-regex</span><span class="token punctuation">:</span> <span class="token string">&quot;album.*&quot;</span></span>
<span class="line">              <span class="token key atrule">descriptor-file-base64</span><span class="token punctuation">:</span> <span class="token string">&quot;Cs4BCgthbGJ1bS5wcm90bxIXY29tLm5ldGNyYWNrZXIucHJvdG9idWYidwoFQWxidW0SFAoFdGl0bGUYASABKAlSBXRpdGxlEhYKBmFydGlzdBgCIAMoCVIGYXJ0aXN0EiEKDHJlbGVhc2VfeWVhchgDIAEoBVILcmVsZWFzZVllYXISHQoKc29uZ190aXRsZRgEIAMoCVIJc29uZ1RpdGxlQiUKF2NvbS5uZXRjcmFja2VyLnByb3RvYnVmQgpBbGJ1bVByb3RvYgZwcm90bzM=&quot;</span></span>
<span class="line">              <span class="token key atrule">value-message-type</span><span class="token punctuation">:</span> <span class="token string">&quot;org.akhq.utils.Album&quot;</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">topic-regex</span><span class="token punctuation">:</span> <span class="token string">&quot;film.*&quot;</span></span>
<span class="line">              <span class="token key atrule">descriptor-file-base64</span><span class="token punctuation">:</span> <span class="token string">&quot;CuEBCgpmaWxtLnByb3RvEhRjb20uY29tcGFueS5wcm90b2J1ZiKRAQoERmlsbRISCgRuYW1lGAEgASgJUgRuYW1lEhoKCHByb2R1Y2VyGAIgASgJUghwcm9kdWNlchIhCgxyZWxlYXNlX3llYXIYAyABKAVSC3JlbGVhc2VZZWFyEhoKCGR1cmF0aW9uGAQgASgFUghkdXJhdGlvbhIaCghzdGFycmluZxgFIAMoCVIIc3RhcnJpbmdCIQoUY29tLmNvbXBhbnkucHJvdG9idWZCCUZpbG1Qcm90b2IGcHJvdG8z&quot;</span></span>
<span class="line">              <span class="token key atrule">value-message-type</span><span class="token punctuation">:</span> <span class="token string">&quot;org.akhq.utils.Film&quot;</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">topic-regex</span><span class="token punctuation">:</span> <span class="token string">&quot;test.*&quot;</span></span>
<span class="line">              <span class="token key atrule">descriptor-file</span><span class="token punctuation">:</span> <span class="token string">&quot;other.desc&quot;</span></span>
<span class="line">              <span class="token key atrule">key-message-type</span><span class="token punctuation">:</span> <span class="token string">&quot;org.akhq.utils.Row&quot;</span></span>
<span class="line">              <span class="token key atrule">value-message-type</span><span class="token punctuation">:</span> <span class="token string">&quot;org.akhq.utils.Envelope&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>More examples about Protobuf deserialization can be found in <a href="https://github.com/tchiotludo/akhq/tree/dev/src/test/java/org/akhq/utils" target="_blank" rel="noopener noreferrer">tests</a>. Info about the descriptor files generation can be found in <a href="https://github.com/tchiotludo/akhq/tree/dev/src/test/resources/protobuf_proto" target="_blank" rel="noopener noreferrer">test resources</a>.</p>`,5)]))}const c=a(o,[["render",p],["__file","protobuf.html.vue"]]),r=JSON.parse('{"path":"/docs/configuration/protobuf.html","title":"Protobuf deserialization","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1738770168000,"contributors":[{"name":"tomaszpapirzwierz","username":"tomaszpapirzwierz","email":"31476238+tomaszpapirzwierz@users.noreply.github.com","commits":1,"url":"https://github.com/tomaszpapirzwierz"}]},"filePathRelative":"docs/configuration/protobuf.md"}');export{c as comp,r as data};

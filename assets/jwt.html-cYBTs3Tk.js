import{_ as e,c as a,b as s,o as t}from"./app-B2WT8wQ4.js";const i={};function l(o,n){return t(),a("div",null,n[0]||(n[0]=[s(`<h1 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt"><span>JWT</span></a></h1><p>AKHQ uses signed JWT tokens to perform authentication.</p><p>Please generate a secret that is at least 256 bits.</p><p>You can use one of the following methods to provide the generated secret to AKHQ.</p><h2 id="configuration-file" tabindex="-1"><a class="header-anchor" href="#configuration-file"><span>Configuration File</span></a></h2><p>Provide the generated secret via the AKHQ <code>application.yml</code> via the following directive:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">micronaut</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">security</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">token</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">jwt</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">signatures</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">secret</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">generator</span><span class="token punctuation">:</span></span>
<span class="line">              <span class="token key atrule">secret</span><span class="token punctuation">:</span> &lt;your secret here<span class="token punctuation">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="environment-variable" tabindex="-1"><a class="header-anchor" href="#environment-variable"><span>Environment Variable</span></a></h2><p>Provide the generated secret via <a href="https://docs.micronaut.io/latest/guide/index.html#_property_value_binding" target="_blank" rel="noopener noreferrer">Micronaut Property Value Binding</a> using the following environment variable for the execution environment of AKHQ:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">MICRONAUT_SECURITY_TOKEN_JWT_SIGNATURES_SECRET_GENERATOR_SECRET</span><span class="token operator">=</span><span class="token string">&quot;&lt;your secret here&gt;&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,10)]))}const c=e(i,[["render",l],["__file","jwt.html.vue"]]),p=JSON.parse('{"path":"/docs/configuration/authentifications/jwt.html","title":"JWT","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Configuration File","slug":"configuration-file","link":"#configuration-file","children":[]},{"level":2,"title":"Environment Variable","slug":"environment-variable","link":"#environment-variable","children":[]}],"git":{"updatedTime":1737841635000,"contributors":[{"name":"Ludovic DEHON","username":"Ludovic DEHON","email":"tchiot.ludo@gmail.com","commits":1,"url":"https://github.com/Ludovic DEHON"}]},"filePathRelative":"docs/configuration/authentifications/jwt.md"}');export{c as comp,p as data};

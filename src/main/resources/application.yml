micronaut:
  application:
    name: kafkahq
  io:
    watch:
      paths: src/main
      restart: false # enabled dev server with env vars MICRONAUT_IO_WATCH_RESTART=true
  router:
    static-resources:
      static:
        paths: classpath:static
        mapping: "${kafkahq.server.base-path:}/static/**"
  security:
    enabled: true
    endpoints:
      login:
        enabled: true
        path: "${kafkahq.server.base-path:}/login"
      logout:
        enabled: true
        path: "${kafkahq.server.base-path:}/logout"
        get-allowed: true
    session:
      enabled: true
      login-success-target-url: "${kafkahq.server.base-path:}/"
      logout-target-url: "${kafkahq.server.base-path:}/"
      forbidden-target-url: "${kafkahq.server.base-path:}/login/forbidden"
      unauthorized-target-url: "${kafkahq.server.base-path:}/login/unauthorized"
      login-failure-target-url: "${kafkahq.server.base-path:}/login/failed"
    intercept-url-map:
      - pattern: "${kafkahq.server.base-path:}/static/**"
        access: "isAnonymous()"
    ldap:
      default:
        enabled: true
        context:
          server: 'ldap://ldap.forumsys.com:389'
          managerDn: 'cn=read-only-admin,dc=example,dc=com'
          managerPassword: 'password'
        search:
          base: "dc=example,dc=com"
        groups:
          enabled: true
          base: "dc=example,dc=com"
  caches:
    kafka-wrapper:
      record-stats: true
      expire-after-write: 0s


endpoints:
  all:
    path: "${kafkahq.server.base-path:}"
  health:
    enabled: true
    sensitive: false
    details-visible: anonymous
  info:
    enabled: true
    sensitive: false
  metrics:
    enabled: true
    sensitive: false
    export:
      prometheus:
        enabled: true
        step: PT1M
        descriptions: true
  prometheus:
    enabled: true
    sensitive: false
  caches:
    enabled: true
    sensitive: false

jackson:
  module-scan: false

kafkahq:
  connections:
    my-cluster-plain-text: # url friendly name for the cluster
      properties: # standard kafka properties (optional)
        bootstrap.servers: "localhost:9092"

  server:
    base-path: ""
    access-log:
      enabled: true
      name: org.kafkahq.log.access
      format: "[Date: {}] [Duration: {} ms] [Url: {} {} {}] [Status: {}] [Ip: {}] [Length: {}] [Port: {}]"

  clients-defaults:
    consumer:
      properties:
        max.poll.records: 50
        isolation.level: read_committed
        group.id: KafkaHQ
        enable.auto.commit: "false"
        default.api.timeout.ms: 15000

  pagination:
    page-size: 25
    threads: 16

  topic:
    default-view: HIDE_INTERNAL
    replication: 1
    retention: 86400000
    partition: 1
    internal-regexps:
      - "^_.*$"
      - "^.*_schemas$"
      - "^.*connect-config$"
      - "^.*connect-offsets$1"
      - "^.*connect-status$"
    stream-regexps:
      - "^.*-changelog$"
      - "^.*-repartition$"
      - "^.*-rekey$"

  topic-data:
    sort: OLDEST
    size: 50
    poll-timeout: 1000

  security:
    groups:
      admin:
        roles:
          - 'topic/read'
        ldapGroup: Scientists
      topic-reader:
        roles:
          - 'topic/read'
          - 'topic/insert'
          - 'topic/delete'
          - 'topic/config/update'
          - 'group/read'
          - 'group/delete'
        ldapGroup: Scientists
      topic-writer:
        roles:
          - 'topic/insert'
        ldapGroup: Scientists

    basic-auth:
      oldWayUser: # Old way user that must still work
        password: d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1
        roles: # Role for current users
          - topic/read
          - topic/insert
          - topic/delete
          - topic/config/update
          - group/read
          - group/delete
        attributes:
          # Regexp to filter topic available for current user
          topics-filter-regexp: "test.*"
      newWayUser: # new user that will use group instead of listing roles
        password: d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1
        group: topic-reader
        attributes:
          topics-filter-regexp: "test.*"
      newWayUserWithAnExtraRole: # new user that will use group instead of listing roles
        password: d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1
        group: topic-reader
        roles:
          - group/read
        attributes:
          topics-filter-regexp: "test.*"
      newAdminUser: # new user that will use group instead of listing roles
        password: d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1
        group: admin
        attributes:
          topics-filter-regexp: "test.*"

    default-roles:
      - topic/read
      - topic/insert
      - topic/delete
      - topic/config/update
      - node/read
      - node/config/update
      - topic/data/read
      - topic/data/insert
      - topic/data/delete
      - group/read
      - group/delete
      - group/offsets/update
      - registry/read
      - registry/insert
      - registry/update
      - registry/delete
      - registry/version/delete
      - acls/read
      - connect/read
      - connect/insert
      - connect/update
      - connect/delete
      - connect/state/update